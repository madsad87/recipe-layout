{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/js/components/body-class-text-control.js","webpack:///./lib/js/components/post-class-text-control.js","webpack:///./lib/js/editor/custom-classes.js","webpack:///./lib/js/editor/new-meta.js","webpack:///./node_modules/@babel/runtime/helpers/defineProperty.js","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"compose\"]}","webpack:///external {\"this\":[\"wp\",\"data\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}","webpack:///external {\"this\":[\"wp\",\"i18n\"]}","webpack:///external {\"this\":[\"wp\",\"plugins\"]}"],"names":["BodyControl","bodyClass","onUpdate","__","newClass","BodyClassTextControl","compose","withSelect","select","getEditedPostAttribute","_genesis_custom_body_class","withDispatch","dispatch","editPost","meta","newMeta","PostControl","postClass","PostClassTextControl","_genesis_custom_post_class","GenesisCustomClasses","registerPlugin","render","newKey","newValue","currentMeta","genesisMeta","Object","keys","filter","key","startsWith","reduce","obj"],"mappings":"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","file":"custom-classes.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./lib/js/editor/custom-classes.js\");\n","/**\n * The BodyClassTextControl component for use in the Custom Classes panel.\n *\n * @since   3.1.0\n * @package Genesis\\JS\n * @author  StudioPress\n * @license GPL-2.0-or-later\n */\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { select, withSelect, withDispatch } from '@wordpress/data';\nimport { TextControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { newMeta } from '../editor/new-meta.js';\n\nfunction BodyControl( { bodyClass, onUpdate } ) {\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Body Class', 'genesis' ) }\n\t\t\tvalue={ bodyClass }\n\t\t\tonChange={ ( newClass ) => onUpdate( newClass ) }\n\t\t/>\n\t);\n}\n\nexport const BodyClassTextControl = compose( [\n\twithSelect( () => {\n\t\treturn {\n\t\t\tbodyClass: select( 'core/editor' ).getEditedPostAttribute( 'meta' )._genesis_custom_body_class,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonUpdate( newClass ) {\n\t\t\tdispatch( 'core/editor' ).editPost(\n\t\t\t\t{ meta: newMeta( '_genesis_custom_body_class', newClass ) }\n\t\t\t);\n\t\t},\n\t} ) ),\n] )( BodyControl );\n\n","/**\n * The PostClassTextControl component for use in the Custom Classes panel.\n *\n * @since   3.1.0\n * @package Genesis\\JS\n * @author  StudioPress\n * @license GPL-2.0-or-later\n */\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { compose } from '@wordpress/compose';\nimport { select, withSelect, withDispatch } from '@wordpress/data';\nimport { TextControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport { newMeta } from '../editor/new-meta.js';\n\nfunction PostControl( { postClass, onUpdate } ) {\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Post Class', 'genesis' ) }\n\t\t\tvalue={ postClass }\n\t\t\tonChange={ ( newClass ) => onUpdate( newClass ) }\n\t\t/>\n\t);\n}\n\nexport const PostClassTextControl = compose( [\n\twithSelect( () => {\n\t\treturn {\n\t\t\tpostClass: select( 'core/editor' ).getEditedPostAttribute( 'meta' )._genesis_custom_post_class,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => ( {\n\t\tonUpdate( newClass ) {\n\t\t\tdispatch( 'core/editor' ).editPost(\n\t\t\t\t{ meta: newMeta( '_genesis_custom_post_class', newClass ) }\n\t\t\t);\n\t\t},\n\t} ) ),\n] )( PostControl );\n","/**\n * Adds a Classes panel to the Genesis Block Editor sidebar with body class\n * and post class input fields.\n *\n * Fields are stored in post meta as:\n *\n * - `_genesis_custom_body_class`\n * - `_genesis_custom_post_class`\n *\n * These are the same fields used by the original Layout Settings meta box.\n *\n * @since   3.1.0\n * @package Genesis\\JS\n * @author  StudioPress\n * @license GPL-2.0-or-later\n */\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\nimport { Fill, Panel, PanelBody } from '@wordpress/components';\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Internal dependencies\n */\nimport { BodyClassTextControl } from '../components/body-class-text-control';\nimport { PostClassTextControl } from '../components/post-class-text-control';\n\nfunction GenesisCustomClasses() {\n\treturn (\n\t\t<Fragment>\n\t\t\t<Fill name=\"GenesisSidebar\">\n\t\t\t\t<Panel>\n\t\t\t\t\t<PanelBody initialOpen={ true } title={ __( 'Custom Classes', 'genesis' ) }>\n\t\t\t\t\t\t<BodyClassTextControl />\n\t\t\t\t\t\t<PostClassTextControl />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Panel>\n\t\t\t</Fill>\n\t\t</Fragment>\n\t);\n}\n\nregisterPlugin( 'genesis-custom-classes', { render: GenesisCustomClasses } );\n","/**\n * Builds new meta for use when saving post data.\n *\n * @since   3.1.3\n * @package Genesis\\JS\n * @author  StudioPress\n * @license GPL-2.0-or-later\n */\n\n/**\n * WordPress dependencies\n */\nimport { select } from '@wordpress/data';\n\n/**\n * Builds the new Genesis meta given a new key and value.\n *\n * Ensures that:\n * 1. Only Genesis meta is updated when saving Genesis settings, fixing\n * https://github.com/studiopress/genesis/issues/2473.\n * 2. A value of 'false' is sent instead of null for empty checkboxes, fixing\n * https://github.com/studiopress/genesis/issues/2523.\n * 3. Checkboxes do not flicker on and off when saving posts. See “additional\n * info” at https://github.com/studiopress/genesis/pull/2474#issue-310416033.\n *\n * @param {string} newKey\n * @param {*} newValue\n * @return {Object} Genesis meta keys and values.\n */\nexport function newMeta( newKey, newValue ) {\n\tconst currentMeta = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n\tconst genesisMeta = Object.keys( currentMeta )\n\t\t.filter( ( key ) => key.startsWith( '_genesis' ) )\n\t\t.reduce( ( obj, key ) => {\n\t\t\tobj[ key ] = currentMeta[ key ];\n\t\t\tif ( obj[ key ] === null ) {\n\t\t\t\tobj[ key ] = false;\n\t\t\t}\n\t\t\treturn obj;\n\t\t}, {} );\n\n\treturn {\n\t\t...genesisMeta,\n\t\t[ newKey ]: newValue,\n\t};\n}\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"compose\"]; }());","(function() { module.exports = this[\"wp\"][\"data\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());","(function() { module.exports = this[\"wp\"][\"i18n\"]; }());","(function() { module.exports = this[\"wp\"][\"plugins\"]; }());"],"sourceRoot":""}